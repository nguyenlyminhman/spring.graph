type Users {
    id: ID!
    userName: String
    email: String
    fullName: String
    password: String
    active: Boolean
    createdAt: String
    updatedAt: String
    todoList: [Todo]
}

input UserInfoInput {
    userName: String!
    password: String!
    fullName: String!
    email: String!
}

input UserUpdateInfoInput {
    userName: String!
    fullName: String!
}

input UserChangePasswordInput {
    oldPassword: String!
    newPassword: String!
    email: String!
}

extend type Query{
    getActiveUsersList: [Users]
    getDeActiveUsersList: [Users]
    getUserByEmail(email: String!): Users
}

extend type Mutation {
    createUser(input: UserInfoInput!): Users
    updateUserInfo(email: String!, input: UserUpdateInfoInput!): Users
    activeUser(email: String!): Users
    deActiveUser(email: String!): Users
    updateUserPassword(input: UserChangePasswordInput!): Users
}